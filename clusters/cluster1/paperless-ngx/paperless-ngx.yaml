---
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  creationTimestamp: null
  name: paperless-secret
  namespace: default
spec:
  encryptedData:
    PERLESS_SOCIALACCOUNT_PROVIDERS: AgC0m8wwsk2ZUpfllaJXhaI62vTWid5t6nXBYVwEKlatgrZCv8bwrPALY6KUQyFAJIzMeQqZJqtmYHe1FWmWSNBE0YAOw7HYlRATOs+40LpPmj0k/TBn58ddaC2Tw1jt5kyk0k3oAxMHrHbFygKf5Cp19F7LkoFD5RVGtYQ8vK/yEaDmFMjkUEy/iHDVBziVVfB+FdyrqDVXHXNu9OB/m/65jD/LK6Qd0kivzProbfgPyJObO/Jn6p9I3UoEpVZ5fwPRyhHeEvw9yXSmwtv2V9nd//rjj1pjb8bns/41zhERRGi1lkgKPs0NVIvdIVwfDE9laiB9duaIG0aqgcTlC6aiYe13qOV6g7pxKG/obvXzcF921r/S+Ff6fiLExFMrWgpYzQ50AA5w4iMY0hO0DAh3FlcSW7UCh0CzO9DkPBdY6a2YLi2QEsRBW9nc0heq6XDG46xUa9x59NY6wWMLEMB31AVaj5YVwubiUba4gmfuU5dRDg4dUlZe72JyVDev2Dfh4KXzfeODVP8nl839oUbFi1htri0nZn0jLcTboLWlRU86c3te+34OsZEOO2YPqAtgJiIs14yn61FCEt0sLzV180kEP2CSIp9R4IGP+a0ueuebQ3MuvvA2JwgNQuoNIOcqBmr8zabAVySWqxkrz1g91CGRIzR2t1ZZLWbUwczDnNoPyhLeP1Vek6yn4Tud5ma+RqdQBVy0ZGpKI9p79jS1VrIgJOidlzrk3LYNAQ6BTHGdQW6f4xQoQDVzWZzfkwmSk/ROT29axs3OVYklW7AeDg7edVnM36S0ZrM0fOihcd1G6Xk3V6aG0jr9TDfo4K8yq357dpeRAXI0BHgE4xG4cywLjo76pNmL9jQN6b2bMXhGZfwjcB4g/03rnFBlyW8GNfmurSFC8dAl6AWLxnuif8YJsfe2SVoUhHX6KDjMDFLlgXjxwStO+UZBlbFC+0jOvJd/XPKdr4i7dLyze1OB+PM2qQF47LLoA7z9/quF3L6toLyyHgWSQNxipOkhWye9w8xLXa/kg5PUfSlf+SkwBJqKzDlISlDRfF4O/UT+xgfe8DFRjyLnbG6yyaf/Wnm+OYlVwEiKH5FXXi/YS8iZLQ1DVgfDBoVNbPP87KV1a24BShzbeUTMOhs/akOzfMg/9s0YkQvlzJ0PnUogKBv6C22xjhW7dBEv2gOf5iCeTL1Ns8pn1HVKyRcXnw+bTLOlNp3+g5UR9VmOyGmdEnyPpTRdGWfZeEH5g7d/2I++I71KRIN5QAGEbvx48aV1O6DCJH4qogYSacyo8YxnXkAAKRIW1aseSx+EgwbMz0dPk6q99xO8pxdAp8zMPvRcqtI6M2+boZ7i5ucNIsaap3za2u+1/TtvvPZq9ktY2ml89KE6ZazYBeqo8SbAeZwUnLktcGtl0Jcbo55GA0Y=
    db-pass: AgAWaZYUghoImtQNm51RQKJRcvOhBMoze/NEsd3NTpRLPaK9tHNzfhpKQvU+IKLR9nQ2qFsdeIpwhXX41fja1Se0Fmvl4Qg6vM1F73Q/c71pUumGBzh3eex3+H1Ju1V+sed5DqVg0bioNuek9AvoekIstvG+9VXJyZOB0zt/E8NXNlIis0I84SasBT1ODKf/wUm6uAcaKsYT1jiBjePsWZ9FJfYctS76ePV2PpGX5kI0DnzbfQAdyX/Mhs7RjphZUiHCDAvmiZ3eA+0X2kg9kzSKFSV8bJTHNU9lbBq/5BE4QNlGYj6tMdpwWDC8rDViENsRgmQXjgP6sjDQxxxl/TMJ3GqDzPBWOJ7T6tPKFTvtJ5l+2MBX0rO3tlYAeYpnxaQa5rUkx3ZkK+3Ca+s60fFKuweF+rlQrlkff/pEDBTUeD1bSsT/DdrL6Gkq1v0IUm1J15rLxlUpbA12ClAQCRaAOne/Y68M+KCGrblZ73yLohf6olot9HQqWAnRZbst/CTzce/Ix1kLGHaWiXLVLy6AmhO3D7gttk3wPRzBaPzs7fbiSYuXnEj/4r0G+IV57ba11ECKOfa3jVwustpS3MVdyL2AtThO+ahdX+yCCpaAq7nFb9ukEN6ijPII7EIHxza6ylMI2tq/g6Evn1tE8gI1uBMaXT/kecOiIOrMbtniumA2ynZ5bnB91qLpcQ1kHwBCXBVVmex4MYXRLZ95hw==
    db-user: AgAfeNCNJFTqKCWBSckL2fGOc/WfmFVtzeVBs5ONnNVQNc1EwRbpKsR7LyAd+HkhAs3WNHmV5M2k4NpG0LcFZJzRDJctnve4iT/mXH5QBhD7F6yyP+kuUp+UDYXa+3dyszguJzAzB4tFuUN0GsfJ3iIJsmKXCQkZ0OYajvZMaAs200bK0EI9z6QfbFwaIS+ewAnr9ISHb5uvY4MKtpntBc6/qGGKfmuAgJjC0KMxex0JmH0IxosJ78sNnQbreWsdqW99eJsLJkJwCly9BT6/bkK7GlW4PEOkgsyVybKfu2aRtaLHOMBC6QhMkkoaNM7YtCd2VvPrGZNC08qgSSp07Lg0eF64+Kvp740DuiGANN36dmJ1aKubSulWPif39F50G9ScjrthXT8a5MvFhAPazMrAACL1euSmFUkvbKCWn0IIXjoGnUwY2HDlsixSPgdErHOLmsXy/3UDpLlXcmI7uHoZTsOh3tLmuABNkGz489pyJGhPCL/R3Svf1q5DhklFMGvymDn6n/H9fj2FLGLCFveqiNdPTohWUwR9zwZfe3dU1tb/9TNkpFdPRl19G4ddmCPTyCIq+Eesua6HXVit9LDHf1R/oi0VwCogbKS3M/ERy7jvIh2J+s/xih+vvEPSVvZL7qZXlaPS6bkiIOU/Y2R+KhmKp8GcQrFlWKNSb/BPM+INfZxm7uvfDZbVjGpIFxnDmDd35zzu68U=
    secret-key: AgBLoKV6pZCH/Vm6dJhHZ09vDRnFghF7ym24wihXw5iK4tCzcNwrH1tcnx8HwgqBb8GWJN0iANpGOUPWxS/jr+lpRlUTaulrqHK3aQ5Nz28oDwHIw3C8vIoyVYD02nd0zM03vhSqKbYi+9pK/kGdPqCwUTSjY3kBUYqbyw91C2kgxNgv4Dm7WDtZ6q9MwceAJkkWR3J2m2a+tnFon0OkgybqZ+g57AsS0qz0617QHRZhs6INiqoStHCvBBGKjpY+/HW66r/R6gUYD2p7J0iwtAaj6Mv16whZ1ZnQyRFvMSTk9Hp38EdsNK3LTGOHXoeyBpKIPyQPbLtISsz42J6fZwp7iIYBefS+9AfxE98UBuaCSHBz9/E7WK6WQpfr0sZYs/pBtHpUokTwZS3pjpuJf+/T9xuOa0Tun3UDKXXsKqaCIapeKyao47m8bqiUXfKdNhJWQ4FYN/t4m5vfDPWp2SFPa9x8JYV2erBbj3Y9Rb047vHF+RDBwUhu/rM6jAg9Jb+ziAHe9KYUJVzIB9dyWebcIm9zpA47ixSyNkVqfit24SPBBMeIVx3eQfP399Phk3JX365VKrmXm7K0O7U5v6/DHewIbZiFKZ8vMsNioJh93ayhArQb3iHdECmIcsXiqC6VlXbUULawvx4WNECTh0mF1kSFLDwlKkr675jXHkDM10IqXzisLQE7gpr9X6JrO65cK95Ds6N+UoQD+7k+bisoxSz/z349lbjX5F0ym+K0w8Vs0btWetpk/tho8g==
  template:
    metadata:
      creationTimestamp: null
      name: paperless-secret
      namespace: default
    type: Opaque
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: paperless-postgres
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: paperless-postgres
  template:
    metadata:
      labels:
        app: paperless-postgres
    spec:
      containers:
        - name: paperless-postgres
          image: docker.io/library/postgres:17
          env:
            - name: PGDATA
              value: '/var/lib/postgresql/data/pgdata'
            - name: POSTGRES_DB
              value: paperless
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: paperless-secret
                  key: db-user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: paperless-secret
                  key: db-pass
          ports:
            - containerPort: 5432
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: paperless-postgres-storage
      volumes:
        - name: paperless-postgres-storage
          persistentVolumeClaim:
            claimName: paperless-postgres-data-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: paperless-postgresql
  namespace: default
spec:
  selector:
    app: paperless-postgres
  ports:
    - port: 5432
      targetPort: 5432
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: paperless-redis
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: paperless-redis
  template:
    metadata:
      labels:
        app: paperless-redis
    spec:
      containers:
        - name: paperless-redis
          image: docker.io/library/redis:8
          ports:
            - containerPort: 6379
          volumeMounts:
            - mountPath: /data
              name: paperless-redis-storage
          args: ["--save", "", "--appendonly", "no"]
      volumes:
        - name: paperless-redis-storage
          persistentVolumeClaim:
            claimName: paperless-redis-data-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: paperless-redis
  namespace: default
spec:
  selector:
    app: paperless-redis
  ports:
    - port: 6379
      targetPort: 6379
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: paperless-ngx
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: paperless-ngx
  template:
    metadata:
      labels:
        app: paperless-ngx
    spec:
      containers:
        - name: paperless-ngx
          image: ghcr.io/paperless-ngx/paperless-ngx:2.18.3 # {"$imagepolicy": "flux-system:paperless-ngx"}
          ports:
            - containerPort: 8000
          env:
            - name: PAPERLESS_REDIS
              value: redis://paperless-redis:6379
            - name: PAPERLESS_DBHOST
              value: paperless-postgresql
            - name: PAPERLESS_DBUSER
              valueFrom:
                secretKeyRef:
                  name: paperless-secret
                  key: db-user
            - name: PAPERLESS_DBPASS
              valueFrom:
                secretKeyRef:
                  name: paperless-secret
                  key: db-pass
            - name: PAPERLESS_DBNAME
              value: paperless
            - name: PAPERLESS_URL
              value: https://paperless.tallflix.ca
            - name: PAPERLESS_TIME_ZONE
              value: America/Toronto
            - name: PAPERLESS_OCR_LANGUAGE
              value: eng
            - name: PAPERLESS_ENABLE_ALLAUTH
              value: "true"
            - name: PAPERLESS_APPS
              value: "allauth.socialaccount.providers.openid_connect"
            - name: PAPERLESS_SOCIALACCOUNT_PROVIDERS
              valueFrom:
                secretKeyRef:
                  name: paperless-secret
                  key: PAPERLESS_SOCIALACCOUNT_PROVIDERS
            - name: PAPERLESS_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: paperless-secret
                  key: secret-key
            - name: PAPERLESS_TIKA_ENABLED
              value: "true"
            - name: PAPERLESS_TIKA_GOTENBERG_ENDPOINT
              value: http://paperless-gotenberg:3000
            - name: PAPERLESS_TIKA_ENDPOINT
              value: http://paperless-tika:9998
          volumeMounts:
            - name: paperless-data
              mountPath: /usr/src/paperless/data
            - name: paperless-media
              mountPath: /usr/src/paperless/media
            - name: paperless-export
              mountPath: /usr/src/paperless/export
      volumes:
        - name: paperless-data
          persistentVolumeClaim:
            claimName: paperless-data-pvc
        - name: paperless-media
          persistentVolumeClaim:
            claimName: paperless-media-pvc
        - name: paperless-export
          persistentVolumeClaim:
            claimName: paperless-export-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: paperless-export-pvc
  namespace: default
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: syno-nfs
  volumeName: paperless-export-pv
  resources:
    requests:
      storage: 8Gi
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: paperless-export-pv
spec:
  storageClassName: syno-nfs
  capacity:
    storage: 8Ti
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  mountOptions:
    - hard
    - nfsvers=4
  nfs:
    server: 10.10.10.110
    path: "/volume1/paperless-backups"
---
apiVersion: v1
kind: Service
metadata:
  name: paperless-ngx
  namespace: default
spec:
  selector:
    app: paperless-ngx
  ports:
    - port: 8000
      targetPort: 8000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: paperless-ingress
  namespace: default
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/proxy-body-size: 100000m
    nginx.ingress.kubernetes.io/proxy-buffer-size: "256k"
    nginx.ingress.kubernetes.io/proxy-buffers: "4 256k"
    nginx.ingress.kubernetes.io/proxy-busy-buffers-size: "256k"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - "paperless.tallflix.ca"
    secretName: paperless-tls-secret
  rules:
  - host: paperless.tallflix.ca
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: paperless-ngx
            port:
              number: 8000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: paperless-gotenberg
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: paperless-gotenberg
  template:
    metadata:
      labels:
        app: paperless-gotenberg
    spec:
      containers:
        - name: gotenberg
          image: docker.io/gotenberg/gotenberg:8.20
          args:
            - "gotenberg"
            - "--chromium-disable-javascript=true"
            - "--chromium-allow-list=file:///tmp/.*"
          ports:
            - containerPort: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: paperless-gotenberg
  namespace: default
spec:
  selector:
    app: paperless-gotenberg
  ports:
    - port: 3000
      targetPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: paperless-tika
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: paperless-tika
  template:
    metadata:
      labels:
        app: paperless-tika
    spec:
      containers:
        - name: tika
          image: docker.io/apache/tika:latest
          ports:
            - containerPort: 9998
---
apiVersion: v1
kind: Service
metadata:
  name: paperless-tika
  namespace: default
spec:
  selector:
    app: paperless-tika
  ports:
    - port: 9998
      targetPort: 9998
