---
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  creationTimestamp: null
  name: paperless-secret
  namespace: default
spec:
  encryptedData:
    db-pass: AgDCqO+p7i5N/BibPNSy0Hw5j86+4DijMhrvuJiLJkylSGWJX/y3GLo8HkE0epwtPjD5x4NBW5//ktjxpGW076ZWINkwV3Bnllfo5kk0vmu98vC5L5NW7hxiEHGFnnYZRazLfSxftapMs/6Q0+b7Hw+uakLaktduQHVN/Z6nfvVV4xEVDbOSkJ6Wp0vmIYxPlQxoWRce69/VqU7W8bWTGVJDx+3eUm/MfKQg+ILfaFOHoNB/Ga4iwrUKTqSYyF2omAjcZhg6aRvX31edt7gzfmXs8SF2HArrDvajjmqa6Od6PAJdl+o8EeWh47UZCNUPej6QBC5Nxj7hDvikN3QZBM0+YKaWgMd/xB2Ldx10aeiISOveVr1CVgHy58AnzJlMZSpwd7x2I/PsLEhVA2TC/4Y8W/K+LdewQDGoNtGs69uFbIpAYDAjHSceUvslYe99klmwCm7bSxt3CD+6e0zPznMPxgKcVXWX94cQ9ZD7PtXefcXLaHMXmKKgJtfs/PC+RxW0YujRxW9FcBGgJ9IbJbNmdNQZyW3Kns4jCxal5L8hldkbOenI2Hf4rhsR+sIR+MXAEsmlGSdQab6iudcvnKECkC3QX6EqwrTB5aqbYKkGl1iPI9vpFI0kTQYYXJiqocL/AD0NnFpybY0Fdw/NuFQ1Hep3JP8IFlmyZGF35AzjMWVgWIeWWLcBiD0KE+/+AgDpHU297gyunf4qxOjdkQ==
    db-user: AgA7A/oyurGYaDMiGkLUn8v4yffycmB+b+gwav7P+g01dZrp1p+sYclrx1PZZhXKX5NzyRJtUsJlRp3DpQRNeZ+/tPOzpt9ejor7PhG3atHTmOZZRjvqdSSfv6V3kC1qdTy6P5kKXGJryC9g/+uMk5BQZsdqekgox6A4uxxjlCemqIFP2JKQHhO+d83ccYLFgUMJZbVgic48wf8E1Qa4JrTJJ+JCLRs0m60wZuGZJNMDRMhCAmQCaLzkyvoIPL+ky7ypAc/zci2nWt6o2Vtt7CTswxhaZDZ1HZKlzRQXuKs26dtCC43orDsrWSedESvVGWtngpjVrTXjwm8r60YJYQThupOrAlNdcSc2iusxeNLTY3XHdyk3plXNau2jT25GlR2hE/85cFMruWBEppJyZr8MLIq6nSmsfMfHH7wRKlh2NFzIfVUoSbgpZvudjWLagod43dxT9h5nX6UKOOljGmGDUBVQq/sJ4aF8hmiKpmh5hFG4qNjinIs2t59A769159q6fYOYVfkrj9Z1AsBsw0a2fldwoybqJNt0kL4eWs1CekKPCwaXXZqRCQuQKpjU2bUz+MDyDo35NxwpYUJzwF/qH4QjOxq1Ylgt2cRL24gVLKUAnbHhuzDqoxT+OLiK/avJmBkJjlFTsd73ajVmHZJqBxMPoPNUv+3sMuspxSJyoknGHSY6qFWEG7vCYxI2XM9z6xu6rNN1jGk=
    secret-key: AgBHUSGn15rZGstmFgJU+zk7AED3DUi5CCBmvQRELNZMghjRmV/H51Vl/CD1w2FRWEXk5xINBy6hHkPv/Hs81qHMLJqYPmnPAHbRbUcmwJoCYyY9OPsZk67omorpOG5rXM1Nf/Rd+/mevVdaEuND3rNyJhr1RC15Sn2Lu3x0Mp29AUY1Bl2Ik577tVH1EHGIimnH3XeUco48coIAgI8a23R4W1ebgaYPTvhjTXswxMn7FERWwlRlTcXXu6kxkULkeGh1zrvZs4iQ1EflLe/oyxPAhA7u7eB7GioF8PakfmEsvoDqrHk+VeyP5nkGZMhxafbKFCzYpqYQPt0DMLFRjamfyleoq513d1NVy2n5dMvng+0W4GfXyToT4RjsCP1b+gd9VN5MtML8Cd/ngl3J5VLOyuQQhSKrVfOv728ZGi7t8UzM7nDpzmupUaJDAlqhcP4zj9fIWtN5uz/qWzPb9mkrtgZlcC5h7QmXLCIwJhwhyzWvTyOaJk/EIK7yIL4VWzbVkgAnOGAPqa6T5nIiFTAaX+6XDlgs5bArXGADrDui8bRURKLYlRM6bqSpoEGPQTXY5TG56kmYGFDBrdjma0SdGRnkUqby7PhVQ6jjoy5bS/1H+INF9QFYxwCd5VD/w8FkuNYDWKSazzyorYOm9mJpPr4ONeasi9T+ztO5/khwRTtXKrWZFQb8V+Uz5CDrSmon0DoLPmMef7+WLxCxC+L0gfmBkrHMSk0cIqZLfGaaQrHQ1sd3qMIa3O9dYg==
  template:
    metadata:
      creationTimestamp: null
      name: paperless-secret
      namespace: default
    type: Opaque
---
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  creationTimestamp: null
  name: paperless-socialaccount
  namespace: default
spec:
  encryptedData:
    PAPERLESS_SOCIALACCOUNT_PROVIDERS: AgB/GtGx/YfU1uHuPjRK6bcNZfeJHJ+HacLoOSlmxR52w63BdX/vRVxlhNiQWmmuLtv86YGzpYHyR9UL4XLG1fDit6qXh8Fj+4uJ8mh6LH+PYomQQ432FiT897IBot7kkwT1RuE6XfVCyQdSrMwTuZQBesfz7UUwQky10ClAAc4OO0QTbEY8Wn8xlZg3mYE/r/8Z3SAocMXpMYWh3AlwklvHQ3Dg0rSvBNBMgs6rWdDQSqjsFG1l5Ntgx2S2mhx4pz35TCbIldhUuZPUK1dqQA6A1/YhG92cq+bZWKKbsr7tK7Reve+KHZHVuEmtrqRbuyVocIGvGbLjeUYAVX2+t4nIPRNhf5OFoiuwU++y9rCxnSxyzuu1XFdc6K/znPEjKmAmdoz7k8+mVf3qZ8L+3k3skbp45v/Cnl+rfSZOL/NeLMx/G1hd/Jw7RXPPo3U6XSQ4PWjP/UQNo0smCcEgmaVGN2+ieQC94sL5Yu+JsIU7L/I3VSPG6v5/8WrgGi/LNOO2K64GcqGNh8PBvSybYcEIsXwOpQ/4YXvY2jRYXex8S6nq2+MnxjMLGjLUAITt64tVgmEqPiIcyGHZkaFmVgbOcDVCd+gd21SCLQWV2k8RmzruYxtl/B+QgN8f1tdGh2MGW9hoz4CD7Ia2XSevgFHc3ZcKLZCmvhQPbK6ckFa7gLBhQUqad/wkIRyjtdLzxb7zqGN5Z0zUaHbV2819nlYgn3KSsljUzb6J3FE9vKKryGcz65zzlInwNnvC1KcHaaxGFomIz/8Vtr9i8XvX5/BeO+GmUE47FSjT4sAWgdtgvPwYQsh7w5rRhmU2asOAZXCEN3jsX+9+/CrpyrU0Yse1ZvWKpxqF1pA71RDS6H9cN1kBcn7k+ZuPBK8D/U59tmPlUEV3gT7XSLl4uxU6hcaWGraTQ4SD9RR4QAQy9C6dVXw2FZGTi0oT7RICvS7t6l9VBRiLMd1NuaL2eJumERNgqsysMZPbb1J63qqlBBe8DIc8gl0QpLZ59nP0BnsexeDCJ1WTd70lupaoi4otBIongHQvN1iOpV0Czy1/AF/KSqKr
  template:
    metadata:
      creationTimestamp: null
      name: paperless-socialaccount
      namespace: default

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: paperless-postgres
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: paperless-postgres
  template:
    metadata:
      labels:
        app: paperless-postgres
    spec:
      containers:
        - name: paperless-postgres
          image: docker.io/library/postgres:17
          env:
            - name: PGDATA
              value: '/var/lib/postgresql/data/pgdata'
            - name: POSTGRES_DB
              value: paperless
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: paperless-secret
                  key: db-user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: paperless-secret
                  key: db-pass
          ports:
            - containerPort: 5432
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: paperless-postgres-storage
      volumes:
        - name: paperless-postgres-storage
          persistentVolumeClaim:
            claimName: paperless-postgres-data-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: paperless-postgresql
  namespace: default
spec:
  selector:
    app: paperless-postgres
  ports:
    - port: 5432
      targetPort: 5432
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: paperless-redis
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: paperless-redis
  template:
    metadata:
      labels:
        app: paperless-redis
    spec:
      containers:
        - name: paperless-redis
          image: docker.io/library/redis:8
          ports:
            - containerPort: 6379
          volumeMounts:
            - mountPath: /data
              name: paperless-redis-storage
          args: ["--save", "", "--appendonly", "no"]
      volumes:
        - name: paperless-redis-storage
          persistentVolumeClaim:
            claimName: paperless-redis-data-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: paperless-redis
  namespace: default
spec:
  selector:
    app: paperless-redis
  ports:
    - port: 6379
      targetPort: 6379
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: paperless-ngx
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: paperless-ngx
  template:
    metadata:
      labels:
        app: paperless-ngx
    spec:
      containers:
        - name: paperless-ngx
          image: ghcr.io/paperless-ngx/paperless-ngx:2.18.3 # {"$imagepolicy": "flux-system:paperless-ngx"}
          ports:
            - containerPort: 8000
          env:
            - name: PAPERLESS_REDIS
              value: redis://paperless-redis:6379
            - name: PAPERLESS_DBHOST
              value: paperless-postgresql
            - name: PAPERLESS_DBUSER
              valueFrom:
                secretKeyRef:
                  name: paperless-secret
                  key: db-user
            - name: PAPERLESS_DBPASS
              valueFrom:
                secretKeyRef:
                  name: paperless-secret
                  key: db-pass
            - name: PAPERLESS_DBNAME
              value: paperless
            - name: PAPERLESS_URL
              value: https://paperless.tallflix.ca
            - name: PAPERLESS_TIME_ZONE
              value: America/Toronto
            - name: PAPERLESS_OCR_LANGUAGE
              value: eng
            - name: PAPERLESS_ENABLE_ALLAUTH
              value: "true"
            - name: PAPERLESS_APPS
              value: "allauth.socialaccount.providers.openid_connect"
            - name: PAPERLESS_SOCIALACCOUNT_PROVIDERS
              valueFrom:
                secretKeyRef:
                  name: paperless-socialaccount
                  key: PAPERLESS_SOCIALACCOUNT_PROVIDERS
            - name: PAPERLESS_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: paperless-secret
                  key: secret-key
            - name: PAPERLESS_TIKA_ENABLED
              value: "true"
            - name: PAPERLESS_TIKA_GOTENBERG_ENDPOINT
              value: http://paperless-gotenberg:3000
            - name: PAPERLESS_TIKA_ENDPOINT
              value: http://paperless-tika:9998
          volumeMounts:
            - name: paperless-data
              mountPath: /usr/src/paperless/data
            - name: paperless-media
              mountPath: /usr/src/paperless/media
            - name: paperless-export
              mountPath: /usr/src/paperless/export
      volumes:
        - name: paperless-data
          persistentVolumeClaim:
            claimName: paperless-data-pvc
        - name: paperless-media
          persistentVolumeClaim:
            claimName: paperless-media-pvc
        - name: paperless-export
          persistentVolumeClaim:
            claimName: paperless-export-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: paperless-export-pvc
  namespace: default
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: syno-nfs
  volumeName: paperless-export-pv
  resources:
    requests:
      storage: 8Gi
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: paperless-export-pv
spec:
  storageClassName: syno-nfs
  capacity:
    storage: 8Ti
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  mountOptions:
    - hard
    - nfsvers=4
  nfs:
    server: 10.10.10.110
    path: "/volume1/paperless-backups"
---
apiVersion: v1
kind: Service
metadata:
  name: paperless-ngx
  namespace: default
spec:
  selector:
    app: paperless-ngx
  ports:
    - port: 8000
      targetPort: 8000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: paperless-ingress
  namespace: default
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/proxy-body-size: 100000m
    nginx.ingress.kubernetes.io/proxy-buffer-size: "256k"
    nginx.ingress.kubernetes.io/proxy-buffers: "4 256k"
    nginx.ingress.kubernetes.io/proxy-busy-buffers-size: "256k"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - "paperless.tallflix.ca"
    secretName: paperless-tls-secret
  rules:
  - host: paperless.tallflix.ca
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: paperless-ngx
            port:
              number: 8000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: paperless-gotenberg
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: paperless-gotenberg
  template:
    metadata:
      labels:
        app: paperless-gotenberg
    spec:
      containers:
        - name: gotenberg
          image: docker.io/gotenberg/gotenberg:8.20
          args:
            - "gotenberg"
            - "--chromium-disable-javascript=true"
            - "--chromium-allow-list=file:///tmp/.*"
          ports:
            - containerPort: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: paperless-gotenberg
  namespace: default
spec:
  selector:
    app: paperless-gotenberg
  ports:
    - port: 3000
      targetPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: paperless-tika
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: paperless-tika
  template:
    metadata:
      labels:
        app: paperless-tika
    spec:
      containers:
        - name: tika
          image: docker.io/apache/tika:latest
          ports:
            - containerPort: 9998
---
apiVersion: v1
kind: Service
metadata:
  name: paperless-tika
  namespace: default
spec:
  selector:
    app: paperless-tika
  ports:
    - port: 9998
      targetPort: 9998
