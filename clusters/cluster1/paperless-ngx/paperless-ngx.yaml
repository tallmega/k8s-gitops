---
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  creationTimestamp: null
  name: paperless-secret
  namespace: default
spec:
  encryptedData:
    PAPERLESS_SOCIALACCOUNT_PROVIDERS: AgBhVyrz72f5jESc2TApufzfWCL68VJjKK3krQ30TDP/0jSO2hrppHfnfs8xX0oR1cjhaKBIH7nw0EdQpdjjX5UQa59K/mfYqZTpbstgO1uavMpGWY0GDUiTUI2oJ3zCoaJZtA6eJxc6w4CAvz7sIZskZuJd7D2x89E8+6jsmVDhypxoLq2o26qbX4G3JMQk40jQpbUkrci9Kp+VHCPk8/XCWr7sGVfiGrxwbDnEdGoVhulIeV1PVGr/1AxLeFH5NqvvRHNJf58LN4QEsGY2MKpM0eFxsJSWpOrYwBPeMxL7UpciOA+3/Ih3b9SOK/UPIlaCdue5uE9e64xK8IONL6gJeS75/rJsA4jWGHnkYlLmDGgfZteXt7d1qGYXlAx8+uwJQUuc9aA5Uoc/kY6OhQibMR46yjtdRrHBNZWyb3L1H6AXP9RDCgh8GB0ijXGzN2GyM/4TkN6fqVx2quj6HOFraf8YvEX5kMyER4u8IjTv/wRRpeH6aNKmYpQd+Hka6+cNyBOuUp/yCVOhA+JWp56Pc4a9tPGW99/mzg+0AUE0oAIzWvcH4Dre4R66rDXnOWirmvTdaK84nyMXRNm6FS1ohF1y5qtPe4IAMOyu3GpP88E7rgtJg67bJGQ6OVcNDo5M3WPbf26mAaSldW9DGx4pkj0fSEsfntrL7Ky5Bxjfm3IsFG8RldHXBwM+HvQYSSt7KiSD7YYacHlK1i/elBNi+mZP8bciFnhNFrIv+Klfzd0UUg6S8rfbjchECVVuvL71ORO2YE3Tc4DpyV84TxhAFoLwQrjHrZhhCpEE+b7H1UvLL2RYxLvk0wO1/SGxp+wu9mr7In4YpbQ/orF91xPdwbS1uhsFVLNNHhzRvRw5Be+2/gaJlSB5wyjepdiGQJrZcwTBCzSYP9+qlXjgl1iASw6DWuSvziThkzckO+XnxaGjks0ZV7HboDZy2UQJhTnM7xAjkNihvT56yf0ojDmz62BH6Rv4OODZWSmzJCWCJQN1TA1yPh6PyyaLgymlvgrCd8MJKMf7jinQp2k1RgoRX3vZ1r8zDt6t4GCJf6csHOulZOyhGBP5UFKskVo5d10bO64n+IJS5WV0FAOtDiiK4Hy1xp/4JJQ7UjPr2YbKVWu+BJM0CWJBUkYaQsgHnRT954qGYJeiAYUqHGpPkTrxafsaAiqmWI1sGUGeoH++IeMEARaM15JAqIYPhBDVxwcVaSca249ATAcoPsDphLSTaoIh8/NVnQCKReNBa6Jfz16tLJ+Zwv7RGwEPAfF4QDdLRb91A4vaGoesixlDRAN3QNiRMJ6Ut1GDQsL1U61laFGvmTgeQtpYRvqwmfAUebPQv+5FhitSY1hfJfSz44B35WgmJzE2fFllJoRKXkCHFrsPcIEjopSbvReIhLRVxkjcpWy0w8JELJgZyqc=
    db-pass: AgCQGKol8kQb1d6M+LcoWL7EVOQV9BW/K9G8mW00b2x2mK+I49FfINpXnhjokIYBncVGW61smoKm9Kupzuzsf9wTucECCl7CnVsUEGL3cVfxUt4sGZrA5OvPsRDpitXazv7DaZISNI68gfE+H0het+8lwtSs8PmRXCDfo6SlqUAC/JwbJMEmWipuuWYUwK0bJGkN4ndpI9qkCJT4/EHaIkma05TmxdQAB4SE1z2jXGh9f7kM0M1gfsoWGaQWU2LPxDWzZfaF0PaGISY/FbRABW7Vvh2w+YiVAQlCrxoyB0xyomdlc0I9JN5WdzG46KANwJKT21n+6DXM9KeGMUEeEONbRhCkGOLnbWHbYmXd9OBu5+sRIkYsmfnzeMlh4R+5V5LuM8NeCCl1oXrvmkTtNwFKrTrgW+gBgt4bg40oFghyl62Mt7v5XdhwK+dRrmmdqTRt6a+pzjlfB4OP0foICCzh3auc7YafVRpNQBa5CXA4CVPNW7L05JcanE6pe9qnLxKvNmO8H5Qj3H8F+9j7o2tj8LEwTdzI5ihaYShHDHLHSuJESo10DS6Q8OENbiaAXw7xmVhVi3WE439OJKStSRh5lc8YywgR5I+PqfDfprZR+jGUKpX2Ca7R7d8prMMyfXptCzSu+uWK1UMwwspUf4/9t5xLlkEw694zKd1dVyroIxAzRulY2+2xytCcww0OWZZzZllzh1PCJPTNn30q4g==
    db-user: AgAwy13vYdvlpH4i/TqlTfoN5QYA5MuR/hqz0Vje408fElgoomFsLxL1q86xVMWz7dhD3YQKrmf7gYrC+lmVYtXatMmu9hdXM0NG92acAIGlXmTHDAE75XHBvjyUC6yF64sIneSCbW839n3ePfRRj9Cl6f+ZUKis+T2ij8LPW6xyu3oAyFxsKwg492bJkRaZ6PRnmFMAeFolpCvGO6KzArbLXclOApIAdBEtWq1wt76VB9aWx2LoZwXmLskWsdqFhMy/3NOObBl1qa6L58DZP2RjKXOkJmLYTNuNSxgv/XjGQ1q6NvUVL2bzLQuog1OmpeTSe4Ou1X3rz3zsW3qIBZ/3J3snTQ7a+kKK1LlXSTo33UFqeRrFngJ0EP/PQ5AuhX+r8hACC4Lx+SybyKUzueurpG+pwOjJrVW8CjrLEs1ldFKgme/+JS75ciX+5GGLS+lnnA4lvcCmngq0tBAlHp9VIHzXbmChOPaXq+V64duvOwzg9Jk/uxckZ+uqgn/yGQzDX1JV/q+3z0Sh2/WTUyBNJStoQuLzwk5Jq06j+VWkvfGk9jnE9ex4cne+qryymM+L+Ae2yBau3Wwm/rM+0UHQ1xHzpGerY3xI6gAoTc8HyEI58eJzWJjZEG4VWLcrEbEvQVCF/a+GL7/0OyaUokpyCkIKNVuasplLXBA4/sZ/8/tBjXTOHr91Hg+PdHRRKqwBvO8UeVjccBU=
    secret-key: AgACFm7QoRZfySqy1WJw/KR4SwrbR0yOn4uwoAaKUTX03plTI2VA0UjjLR3TU/feJe0SX8j+Mm7LaJzynV4ME9JYsNTeeNdECJHwyIJ5o+O9aIO0Xs/EbLk/g3XJzAbxloZhw0jBQrDnFcbXzRUQ3pLLL8nfn+sssIgC4Fu5OROUr3FV3paNI7fi+rcjYZp3WLlelTkitVDtyRMSOQcAYaW9EtPZXDMReu2GJbUALYFxBYpA+Yj9o0ZoEDhB97fDIZQL7uPivUKD3YN02NbuOXroNG0Lc753Y4oSuUOyapM/Y6r1XaLHp2pd6eku8ZQVXVV57Mq8/pGnB5bm4a1iHx3e6W4PiG8b+cZ7AfA7uunbOJ4woenM5dtWaY2AMU9k7y5o13BJrfZAuEfrA/dho9mC4CfAsFfISQjvcYbYqV8LWNJJ820ZGKAc+X2Ch+9FEs03jQu5Pz29b94JfxIxmocRG08HoPSQl1EHmfhE6953lUnWD7R2LRRIViurRhvXXEEybgfu3mi4tog+ofeFsA978vA4WUlMeb+vAEcr0nL7tY6SXwXSJ8OV79I6jOOdtX0VuBszoddNXI1c8ov2fIvnmCaNuiKuyIy+OozMfMBr8zTsDZyMMvdKvUwEE5H8YWGY0lxNcW70N1PjgbMaIjc3kwQDvtEdkH67CrUBmjN++XjZ/IywToFQG30E1eDl8+rrTlEpsx79XlhC+ZFF04UdV+7JPh+xSwKTfVNOWnUZ0tEPPvA9uEBO7QOOPQ==
  template:
    metadata:
      creationTimestamp: null
      name: paperless-secret
      namespace: default
    type: Opaque
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: paperless-postgres
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: paperless-postgres
  template:
    metadata:
      labels:
        app: paperless-postgres
    spec:
      containers:
        - name: paperless-postgres
          image: docker.io/library/postgres:17
          env:
            - name: PGDATA
              value: '/var/lib/postgresql/data/pgdata'
            - name: POSTGRES_DB
              value: paperless
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: paperless-secret
                  key: db-user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: paperless-secret
                  key: db-pass
          ports:
            - containerPort: 5432
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: paperless-postgres-storage
      volumes:
        - name: paperless-postgres-storage
          persistentVolumeClaim:
            claimName: paperless-postgres-data-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: paperless-postgresql
  namespace: default
spec:
  selector:
    app: paperless-postgres
  ports:
    - port: 5432
      targetPort: 5432
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: paperless-redis
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: paperless-redis
  template:
    metadata:
      labels:
        app: paperless-redis
    spec:
      containers:
        - name: paperless-redis
          image: docker.io/library/redis:8
          ports:
            - containerPort: 6379
          volumeMounts:
            - mountPath: /data
              name: paperless-redis-storage
          args: ["--save", "", "--appendonly", "no"]
      volumes:
        - name: paperless-redis-storage
          persistentVolumeClaim:
            claimName: paperless-redis-data-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: paperless-redis
  namespace: default
spec:
  selector:
    app: paperless-redis
  ports:
    - port: 6379
      targetPort: 6379
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: paperless-ngx
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: paperless-ngx
  template:
    metadata:
      labels:
        app: paperless-ngx
    spec:
      containers:
        - name: paperless-ngx
          image: ghcr.io/paperless-ngx/paperless-ngx:2.18.3 # {"$imagepolicy": "flux-system:paperless-ngx"}
          ports:
            - containerPort: 8000
          env:
            - name: PAPERLESS_REDIS
              value: redis://paperless-redis:6379
            - name: PAPERLESS_DBHOST
              value: paperless-postgresql
            - name: PAPERLESS_DBUSER
              valueFrom:
                secretKeyRef:
                  name: paperless-secret
                  key: db-user
            - name: PAPERLESS_DBPASS
              valueFrom:
                secretKeyRef:
                  name: paperless-secret
                  key: db-pass
            - name: PAPERLESS_DBNAME
              value: paperless
            - name: PAPERLESS_URL
              value: https://paperless.tallflix.ca
            - name: PAPERLESS_TIME_ZONE
              value: America/Toronto
            - name: PAPERLESS_OCR_LANGUAGE
              value: eng
            # - name: PAPERLESS_ENABLE_ALLAUTH
            #   value: "true"
            - name: PAPERLESS_APPS
              value: "allauth.socialaccount.providers.openid_connect"
            - name: PAPERLESS_SOCIALACCOUNT_PROVIDERS
              valueFrom:
                secretKeyRef:
                  name: paperless-secret
                  key: PAPERLESS_SOCIALACCOUNT_PROVIDERS
            - name: PAPERLESS_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: paperless-secret
                  key: secret-key
            - name: PAPERLESS_TIKA_ENABLED
              value: "true"
            - name: PAPERLESS_TIKA_GOTENBERG_ENDPOINT
              value: http://paperless-gotenberg:3000
            - name: PAPERLESS_TIKA_ENDPOINT
              value: http://paperless-tika:9998
          volumeMounts:
            - name: paperless-data
              mountPath: /usr/src/paperless/data
            - name: paperless-media
              mountPath: /usr/src/paperless/media
            - name: paperless-export
              mountPath: /usr/src/paperless/export
      volumes:
        - name: paperless-data
          persistentVolumeClaim:
            claimName: paperless-data-pvc
        - name: paperless-media
          persistentVolumeClaim:
            claimName: paperless-media-pvc
        - name: paperless-export
          persistentVolumeClaim:
            claimName: paperless-export-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: paperless-export-pvc
  namespace: default
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: syno-nfs
  volumeName: paperless-export-pv
  resources:
    requests:
      storage: 8Gi
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: paperless-export-pv
spec:
  storageClassName: syno-nfs
  capacity:
    storage: 8Ti
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  mountOptions:
    - hard
    - nfsvers=4
  nfs:
    server: 10.10.10.110
    path: "/volume1/paperless-backups"
---
apiVersion: v1
kind: Service
metadata:
  name: paperless-ngx
  namespace: default
spec:
  selector:
    app: paperless-ngx
  ports:
    - port: 8000
      targetPort: 8000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: paperless-ingress
  namespace: default
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/proxy-body-size: 100000m
    nginx.ingress.kubernetes.io/proxy-buffer-size: "256k"
    nginx.ingress.kubernetes.io/proxy-buffers: "4 256k"
    nginx.ingress.kubernetes.io/proxy-busy-buffers-size: "256k"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - "paperless.tallflix.ca"
    secretName: paperless-tls-secret
  rules:
  - host: paperless.tallflix.ca
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: paperless-ngx
            port:
              number: 8000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: paperless-gotenberg
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: paperless-gotenberg
  template:
    metadata:
      labels:
        app: paperless-gotenberg
    spec:
      containers:
        - name: gotenberg
          image: docker.io/gotenberg/gotenberg:8.20
          args:
            - "gotenberg"
            - "--chromium-disable-javascript=true"
            - "--chromium-allow-list=file:///tmp/.*"
          ports:
            - containerPort: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: paperless-gotenberg
  namespace: default
spec:
  selector:
    app: paperless-gotenberg
  ports:
    - port: 3000
      targetPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: paperless-tika
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: paperless-tika
  template:
    metadata:
      labels:
        app: paperless-tika
    spec:
      containers:
        - name: tika
          image: docker.io/apache/tika:latest
          ports:
            - containerPort: 9998
---
apiVersion: v1
kind: Service
metadata:
  name: paperless-tika
  namespace: default
spec:
  selector:
    app: paperless-tika
  ports:
    - port: 9998
      targetPort: 9998
