---
apiVersion: v1
kind: Namespace
metadata:
  name: identity
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: admin-role-binding
subjects:
  - kind: Group
    name: k8s-admin
    apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: keycloak
  namespace: flux-system
spec:
  chart:
    spec:
      chart: keycloak
      reconcileStrategy: ChartVersion
      sourceRef:
        kind: HelmRepository
        name: bitnami
  interval: 1m0s
  releaseName: keycloak
  targetNamespace: identity

  values:
    image:
      repository: bitnami/keycloak
      tag: 20.0.2
    auth:
      existingSecret: keycloak-secret
      #tls:
      #  enabled: true
      #  autoGenerated: true
    ingress:
      enabled: true
      hostname: sso.tallflix.ca
      ingressClassName: nginx
      tls:
        enabled: true
      annotations:
        cert-manager.io/cluster-issuer: "letsencrypt-prod"
        # nginx.ingress.kubernetes.io/configuration-snippet: |-
        #   set $BE "";
        #   if ($remote_addr !~ '^(10\..*|172\.31\..*)') {
        #     set $BE W;
        #   }
        #   if ($uri !~ '^/(robots.txt|js|resources|realms)') {
        #     set $BE "${BE}R";
        #   }
        #   if ($BE = WR) {
        #     return 403;
        #   }
    service:
      type: ClusterIP

    metrics:
      enabled: false
      serviceMonitor:
        enabled: false
        # labels:
        #   release: monitoring-kube-prometheus-stack
      prometheusRule:
        enabled: false

    postgresql:
      enabled: true
      auth:
        existingSecret: keycloak-secret
        image:
         tag: 14.5.0-debian-11-r39