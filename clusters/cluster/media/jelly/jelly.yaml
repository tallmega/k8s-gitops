apiVersion: apps/v1
kind: Deployment
metadata:
  name: jellyfin
  namespace: default
spec:
  progressDeadlineSeconds: 600
  selector:
    matchLabels:
      app.kubernetes.io/instance: jellyfin
      app.kubernetes.io/name: jellyfin
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: jellyfin
    spec:
      containers:
      - env:
        - name: JELLYFIN_PublishedServerUrl 
          value: 10.10.10.68
        - name: TZ
          value: America/Toronto
        - name: PGID
          value: "\x36\x35\x35\x34\x31" # < ASCII code for '65541'
        - name: PUID
          value: "\x31\x30\x34\x34" #< ACII code for '1044'
        securityContext:
          privileged: true # Container must run as privileged inside of the pod, required for hardware acceleration

        image: ghcr.io/linuxserver/jellyfin # {"$imagepolicy": "flux-system:jellyfin"}
        imagePullPolicy: IfNotPresent
        name: jellyfin

        ports:
        - containerPort: 8096
          name: http-tcp
          protocol: TCP
        - containerPort: 8920
          name: https-tcp
        - containerPort: 1900
          name: dlna-udp
          protocol: UDP
        - containerPort: 7359
          name: discovery-udp
          protocol: UDP

        resources:
          requests: 
              gpu.intel.com/i915: "1" 
          limits: 
              gpu.intel.com/i915: "1" 
        stdin: true
        tty: true
        volumeMounts:
        - mountPath: /config
          name: nfs-jellyfin-config
        - mountPath: /data
          name: nfs-jellyfin-data
        # Below are the path to mount devices for hardware acceleration
        # The settings below have been marked out and can be used when removing the "#"
        # - mountPath: /dev/vcsm
        #   name: device-vcsm
        # - mountPath: /dev/vchiq
        #   name: device-vchiq
        # - mountPath: /dev/video10
        #   name: device-video10
        # - mountPath: /dev/video11
        #   name: device-video11
        # - mountPath: /dev/video12
        #   name: device-video12
      dnsPolicy: ClusterFirst
      restartPolicy: Always

      #   volumeMounts:
      #   - mountPath: /config
      #     name: config
      #   - mountPath: /data/tvshows
      #     name: tv1
      #   - mountPath: /data/tvshows3
      #     name: tv3
      #   - mountPath: /data/music
      #     name: music
      #   - mountPath: /data/movies3
      #     name: movies
      #   - mountPath: /transcode
      #     name: transcode
      # volumes:
      # - name: config
      #   persistentVolumeClaim:
      #     claimName: plex-config-pvc
      # - name: tv1
      #   persistentVolumeClaim:
      #     claimName: tvshows-pvc
      # - name: tv3
      #   persistentVolumeClaim:
      #     claimName: tvshows3-pvc
      # - name: yt
      #   persistentVolumeClaim:
      #     claimName: ytshows-pvc
      # - name: music
      #   persistentVolumeClaim:
      #     claimName: music-pvc
      # - name: movies
      #   persistentVolumeClaim:
      #     claimName: movies3-pvc
      # - emptyDir: {}
      #   name: transcode
---
kind: Service
apiVersion: v1
metadata:
  name: jellyfin-udp       # < name of the service
  namespace: default      # < namespace where to place service
  annotations:
    metallb.universe.tf/allow-shared-ip: jellyfin
    metallb.universe.tf/ip-allocated-from-pool: myipaddresspool
spec:
  selector:
    app: jellyfin          # < reference to the deployment (connects the service with the deployment)
  ports:
  - port: 1900             # < port to open on the outside on the server
    targetPort: 1900       # < targetport. port on the pod to passthrough
    name: dlna-udp         # < reference name for the port in the deployment yaml
    protocol: UDP
  - port: 7359
    targetPort: 7359
    name: discovery-udp
    protocol: UDP
  type: LoadBalancer
  loadBalancerIP: 10.10.10.68 # < IP to access your jellyfinserver. Should be one from the MetalLB range and the same as the UDP yaml
  sessionAffinity: ClientIP # This is necessary for multi-replica deployments

---
kind: Service
apiVersion: v1
metadata:
  name: jellyfin-tcp       # < name of the service
  namespace: default      # < namespace where to place service
  annotations:
    metallb.universe.tf/allow-shared-ip: jellyfin # < annotation name to combine the Service IP, make sure it's same name as in the service UDP yaml
    #metallb.universe.tf/ip-allocated-from-pool: myipaddresspool
spec:
  selector:
    app: jellyfin          # < reference to the deployment (connects the service with the deployment)
  ports:
  - port: 8096             # < port to open on the outside on the server
    targetPort: 8096       # < targetport. port on the pod to passthrough
    name: http-tcp         # < reference name for the port in the deployment yaml
    protocol: TCP
  - port: 8920
    targetPort: 8920
    name: https-tcp
  type: LoadBalancer
  loadBalancerIP: 10.10.10.68 # < IP to access your jellyfinserver. Should be one from the MetalLB range and the same as the TCP yaml
  sessionAffinity: ClientIP # This is necessary for multi-replica deployments