apiVersion: apps/v1
kind: Deployment
metadata:
  name: zigbee2mqtt
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zigbee2mqtt
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: zigbee2mqtt
    spec:
      containers:
        - name: zigbee2mqtt
          image: koenkk/zigbee2mqtt:1.37.0 # {"$imagepolicy": "flux-system:zigbee2mqtt"}
          imagePullPolicy: IfNotPresent
          command: [ "sleep" ]
          args: [ "infinity" ]
          env:
            - name: TZ
              value: America/Toronto
            # - name: "ZIGBEE2MQTT_DATA"
            #   value: "/data"
            - name: ZIGBEE2MQTT_CONFIG_MQTT_SERVER # optional - can also be configured in the configuration.yaml in the configmap
              value: "mqtt://10.10.10.64"
          securityContext:
            privileged: true
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          volumeMounts:
            - name: zigbee2mqtt-data
              mountPath: /data
            # - name: zigbee2mqtt-config
            #   mountPath: /app/configuration.yaml
            #  subPath: configuration.yaml
            - name: ttyusb
              mountPath: /dev/ttyUSB0
      volumes:
        - name: zigbee2mqtt-data
          persistentVolumeClaim:
            claimName: zigbee2mqtt-config-pvc
        - name: ttyusb
          hostPath:
            path: /dev/ttyUSB0
        # - name: zigbee2mqtt-config
        #   configMap:
        #     name: zigbee2mqtt-config
---
apiVersion: v1
kind: Service
metadata:
  name: zigbee2mqtt
  namespace: default
  labels:
    app: zigbee2mqtt
spec:
  selector:
    app: zigbee2mqtt
  ports:
  - name: zigbee2mqtt
    port: 8080
    targetPort: 8080
  type: ClusterIP
---
# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: zigbee2mqtt-config
#   namespace: default
#   labels:
#     app: zigbee2mqtt
# data:
#   configuration.yaml: |2-

#     # Let new devices join our zigbee network
#     permit_join: true
#     # Home Assistant integration (MQTT discovery)
#     homeassistant: true
#     # Docker-Compose makes the MQTT-Server available using "mqtt" hostname
#     # MQTT server URL
#     mqtt:
#       base_topic: zigbee2mqtt
#       server: "mqtt://10.10.10.64" # mqtt://<name_of_pod>.<name_of_namespace> (mosquitto)
#     # Zigbee Adapter path
#     serial:
#       port: /dev/ttyUSB0
#     # Enable the Zigbee2MQTT frontend
#     frontend:
#       port: 8080
#     # Let Zigbee2MQTT generate a new network key on first start
#     advanced:
#       #network_key: GENERATE
#       #log_output: ["console"]
#       log_level: debug
#       log_output:
#       - console
#       - file

#     ## Map devices to persistent /data directory
#     #devices: /data/devices.yaml
#     #groups: /data/groups.yaml
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: zigbee2mqtt-ingress
  namespace: default
spec:
  ingressClassName: internal-nginx
  #tls:
  #- hosts:
  #  - "zigbee2mqtt.tallflix.ca"
  #  secretName: tls-secret
  rules:
  - host: zigbee2mqtt.tallflix.ca
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: zigbee2mqtt
            port:
              number: 8080
