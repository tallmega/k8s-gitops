apiVersion: apps/v1
kind: Deployment
metadata:
  name: zigbee2mqtt
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zigbee2mqtt
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: zigbee2mqtt
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: zigbee
                operator: In
                values:
                - "true"
      containers:
      - name: zigbee2mqtt
        image: koenkk/zigbee2mqtt:1.41.0 # {"$imagepolicy": "flux-system:zigbee2mqtt"}
        imagePullPolicy: IfNotPresent
        env:
        - name: TZ
          value: America/Toronto
        - name: "ZIGBEE2MQTT_DATA"
          value: "/app/data"
        - name: ZIGBEE2MQTT_CONFIG_MQTT_SERVER # optional - can also be configured in the configuration.yaml in the configmap
          value: "mqtt://10.10.10.64"
        securityContext:
          privileged: true
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        volumeMounts:
        - name: zigbee2mqtt-data
          mountPath: /app/data
        - name: ttyusb
          mountPath: /dev/ttyUSB0
      volumes:
      - name: zigbee2mqtt-data
        persistentVolumeClaim:
          claimName: zigbee2mqtt-config-pvc
      - name: ttyusb
        hostPath:
          path: /dev/ttyUSB0
---
apiVersion: v1
kind: Service
metadata:
  name: zigbee2mqtt
  namespace: default
  labels:
    app: zigbee2mqtt
spec:
  selector:
    app: zigbee2mqtt
  ports:
  - name: zigbee2mqtt
    port: 8080
    targetPort: 8080
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: zigbee2mqtt-ingress
  namespace: default
spec:
  ingressClassName: internal-nginx
  #tls:
  #- hosts:
  #  - "zigbee2mqtt.tallflix.ca"
  #  secretName: tls-secret
  rules:
  - host: zigbee2mqtt.tallflix.ca
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: zigbee2mqtt
            port:
              number: 8080
